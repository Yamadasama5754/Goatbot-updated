const fs = require("fs").promises;

module.exports = {
    config: {
        name: "ุฅุนุงุฏุฉ_ุชุดุบูู",
        aliases: ["restart", "ุฅุนุงุฏุฉ ุชุดุบูู", "ุฑูุณุชุงุฑุช"],
        version: "1.2",
        author: "YourName",
        countDown: 5,
        role: 2,  // 2 ูุนูู ุงููุทูุฑ ููุท
        shortDescription: {
            en: "ุฅุนุงุฏุฉ ุชุดุบูู ุงูุจูุช",
        },
        longDescription: {
            en: "ูุฐุง ุงูุฃูุฑ ูุฎุตุต ููุท ูููุทูุฑูู ูุฅุนุงุฏุฉ ุชุดุบูู ุงูุจูุช",
        },
        category: "ุงููุธุงู",
        guide: {
            en: "{pn}: ูู ุจุฅุนุงุฏุฉ ุชุดุบูู ุงูุจูุช"
        }
    },

    langs: {
        en: {
            restarting: "๐ | ุณูุชู ุฅุนุงุฏุฉ ุชุดุบูู ุงูุจูุช ุงูุขู...",
            success: "โ | ุชู ุฅุนุงุฏุฉ ุชุดุบูู ุงูุจูุช ุจูุฌุงุญ! ุงูููุช ุงููุณุชุบุฑู: {time} ุซุงููุฉ.",
            error: "โ | ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุฅุนุงุฏุฉ ุชุดุบูู ุงูุจูุช.",
        }
    },

    onStart: async function ({ message, getLang }) {
        try {
            // ุชุณุฌูู ุจุฏุก ุฅุนุงุฏุฉ ุงูุชุดุบูู
            await message.reply(getLang("restarting"));

            // ุญูุธ ุญุงูุฉ ุฅุนุงุฏุฉ ุงูุชุดุบูู ูู ููู
            const rebootData = {
                threadID: message.threadID,
                timestamp: Date.now()
            };
            await fs.writeFile('reboot.json', JSON.stringify(rebootData, null, 4));

            // ุฅุนุงุฏุฉ ุชุดุบูู ุงูุจูุช
            process.exit(1); // ูุฐุง ูููู ุจุฅููุงู ุงูุนูููุฉ ุงูุญุงููุฉ ูุฅุนุงุฏุฉ ุชุดุบูู ุงูุจูุช

        } catch (e) {
            message.reply(getLang("error"));
        }
    }
};

// ุฏุงูุฉ ูุชููุฏ ููู ุฅุนุงุฏุฉ ุงูุชุดุบูู ุนูุฏ ุจุฏุก ุงูุจูุช
const checkRebootFile = async (api) => {
    try {
        const rebootData = await fs.readFile('reboot.json', 'utf8');
        const { threadID, timestamp } = JSON.parse(rebootData);

        // ุงุญุชุณุงุจ ุงูููุช ุงููุณุชุบุฑู ููุฐ ุฅุนุงุฏุฉ ุงูุชุดุบูู
        const timeTaken = ((Date.now() - timestamp) / 1000).toFixed(2);

        // ุฅุฑุณุงู ุฑุณุงูุฉ ุชุฃููุฏ ุฃู ุงูุจูุช ูุฏ ุฃูุนูุฏ ุชุดุบููู
        await api.sendMessage(`โ | ุชู ุฅุนุงุฏุฉ ุชุดุบูู ุงูุจูุช ุจูุฌุงุญ! ุงูููุช ุงููุณุชุบุฑู: ${timeTaken} ุซุงููุฉ.`, threadID);

        // ุญุฐู ููู ุฅุนุงุฏุฉ ุงูุชุดุบูู ุจุนุฏ ุฅุฑุณุงู ุงูุฑุณุงูุฉ
        await fs.unlink('reboot.json');
    } catch (error) {
        // ูุง ููุฌุฏ ููู ุฃู ุญุฏุซ ุฎุทุฃ ูู ุงููุฑุงุกุฉ
        console.error("ูู ูุชู ุงูุนุซูุฑ ุนูู ููู ุฅุนุงุฏุฉ ุงูุชุดุบูู ุฃู ุญุฏุซ ุฎุทุฃ:", error.message);
    }
};

// ุงุณุชุฏุนุงุก ุงูุฏุงูุฉ ุนูุฏ ุจุฏุก ุชุดุบูู ุงูุจูุช
checkRebootFile(api);
